{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hye ri jang\\\\Desktop\\\\1team-project\\\\src\\\\comp\\\\Button.js\";\nimport React from 'react';\nimport './Button.css';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STYLES = ['btn--primary', 'btn--outline'];\nconst SIZES = ['btn--medium', 'btn--large'];\nexport const Button = ({\n  where,\n  children,\n  type,\n  onClick,\n  buttonStyle,\n  buttonSize\n}) => {\n  // buttonstyle이 따로 지정되지 않으면 가장 기본인 배열의 0번째가 설정된다. \n  const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\n  // buttonsize가 지정되지 않으면 가장 기본 사이즈인 0번재 btn-medium이 설정된다. \n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\n  return (\n    /*#__PURE__*/\n    // children안에 어떤 내용을 입력해도 버튼 이름이 된다. \n    _jsxDEV(Link, {\n      to: where,\n      className: \"btn-mobile\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `btn ${checkButtonStyle} ${checkButtonSize}`,\n        onClick: onClick,\n        type: type,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  );\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","STYLES","SIZES","Button","where","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","to","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/hye ri jang/Desktop/1team-project/src/comp/Button.js"],"sourcesContent":["import React from 'react';\r\nimport './Button.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst STYLES = ['btn--primary', 'btn--outline'];\r\n\r\nconst SIZES = ['btn--medium', 'btn--large'];\r\n\r\nexport const Button = ({where,children, type, onClick, buttonStyle, buttonSize}) => {\r\n    // buttonstyle이 따로 지정되지 않으면 가장 기본인 배열의 0번째가 설정된다. \r\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0];\r\n    // buttonsize가 지정되지 않으면 가장 기본 사이즈인 0번재 btn-medium이 설정된다. \r\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n    return (\r\n        // children안에 어떤 내용을 입력해도 버튼 이름이 된다. \r\n        <Link to ={where} className = 'btn-mobile'>\r\n            <button \r\n            className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n            onClick={onClick}\r\n            type={type}\r\n            >\r\n                {children} \r\n            </button>\r\n        </Link>\r\n    );\r\n    \r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,SAAQC,IAAI,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAM,GAAG,CAAC,cAAc,EAAE,cAAc,CAAC;AAE/C,MAAMC,KAAK,GAAG,CAAC,aAAa,EAAE,YAAY,CAAC;AAE3C,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAACC,KAAK;EAACC,QAAQ;EAAEC,IAAI;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAChF;EACA,MAAMC,gBAAgB,GAAGT,MAAM,CAACU,QAAQ,CAACH,WAAW,CAAC,GAAGA,WAAW,GAAGP,MAAM,CAAC,CAAC,CAAC;EAC/E;EACA,MAAMW,eAAe,GAAGV,KAAK,CAACS,QAAQ,CAACF,UAAU,CAAC,GAAGA,UAAU,GAAGP,KAAK,CAAC,CAAC,CAAC;EAE1E;IAAA;IACI;IACAF,OAAA,CAACF,IAAI;MAACe,EAAE,EAAGT,KAAM;MAACU,SAAS,EAAG,YAAY;MAAAT,QAAA,eACtCL,OAAA;QACAc,SAAS,EAAG,OAAMJ,gBAAiB,IAAGE,eAAgB,EAAE;QACxDL,OAAO,EAAEA,OAAQ;QACjBD,IAAI,EAAEA,IAAK;QAAAD,QAAA,EAENA;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;AAGf,CAAC;AAACC,EAAA,GAnBWhB,MAAM;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}